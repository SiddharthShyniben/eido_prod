body {
	height: calc(100vh - 16px);
	background:	#1E1E1E;
	font-size: 16px;
	tab-size: 4;
	color: white;
}

html, body {
	margin: 0;
}

* {
	box-sizing: border-box;
}

#main {
	display: flex;
}

:not(data-lsp) > code {
	font-family: monospace !important;
	white-space: pre;
	-webkit-overflow-scrolling: touch;
	overflow: scroll;
	width: 60vw;
	height: 100vh;
	padding: 2em;
}

.language-id {
	display: none;
}

p {
	font-size: var(--cds-body-long-02-font-size, 1rem);
	font-weight: var(--cds-body-long-02-font-weight, 400);
	line-height: var(--cds-body-long-02-line-height, 1.5);
	letter-spacing: var(--cds-body-long-02-letter-spacing, 0);
}

span {
	transition: opacity .5s;
}

.focus {
	opacity: 1;
}

.dim,
.dim>span,
.dim>data-lsp {
	opacity: 0.5;
}

.remove {
	height: 17.5px;
	animation: remove-line forwards .5s ease-in
}

.insert {
	transform: translateX(100%);
	opacity: 0;
	height: 0;
	animation: insert-line forwards .5s ease-out;
}

@keyframes insert-line {
	from {
		transform: translateX(100%);
		opacity: 0;
		height: 0;
	}
	to {
		transform: none;
		opacity: 1;	
		height: 17.5px;
	}
}

@keyframes remove-line {
	to {
		transform: translateX(-100%);
		opacity: 0;
		height: 0;
	}
}

pre.shiki {
	height: calc(100vh - 4rem);
	overflow-x: auto;
	position: relative;
	display: flex;
}

.line span {
	white-space: pre;
}

.code-container {
	display: flex;
}

.shiki>.code-container>code {
	flex-grow: 1;
}

.shiki {
	overflow-x: auto;
}
.shiki:hover .dim {
	opacity: 1;
}
.shiki .dim, .shiki .focus {
	margin: 0;
	padding: 0;
}
.shiki .line {
	min-height: 1rem;
}

/** Don't show the language identifiers */
pre.shiki .language-id {
	display: none;
}

data-lsp {
	border-bottom: 1px solid transparent;
	transition-timing-function: ease;
	transition: border-color 0.3s;
	position: relative;
}
data-lsp:hover {
	border-bottom-color: #777;
}

data-lsp code {
	display: none;
}

data-lsp:hover>code {
	display: block;
	position: absolute;
	top: 2rem; left: 0;

	background-color: #3f3f3f;
	color: #fff;
	text-align: left;
	padding: 5px 8px;
	border-radius: 2px;
	font-family: "JetBrains Mono", Menlo, Monaco, Consolas, Courier New, monospace;
	font-size: 14px;
	white-space: pre;
	z-index: 999;
	width: auto;
}

.code-container {
	overflow: auto;
}

data-err {
	/* Extracted from VS Code */
	background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23c94824'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") repeat-x bottom left;
	padding-bottom: 3px;
}
.query {
	margin-bottom: 10px;
	color: #137998;
	display: inline-block;
}

/* In order to have the 'popped out' style design and to not break the layout
/* we need to place a fake and un-selectable copy of the error which _isn't_ broken out
/* behind the actual error message.

/* This sections keeps both of those two in in sync  */

.error, .error-behind {
	margin-left: -14px;
	margin-top: 8px;
	margin-bottom: 4px;
	padding: 6px;
	padding-left: 14px;
	width: calc(100% - 20px);
	white-space: pre-wrap;
	display: block;
}
.error {
	position: absolute;
	color: #fee;
	border-left: 2px solid #bf1818;
	transform: translateX(6px);
	/* Give the space to the error code */
	display: flex;
	align-items: center;
	background-color: #181818;
}
.error .code {
	display: none;
}
.error-behind {
	user-select: none;
	visibility: transparent;
	color: #fee;
}

.arrow {
	background-color: #eee;
	position: relative;
	top: -7px;
	margin-left: 0.1rem;

	border-left: 1px solid #eee;
	border-top: 1px solid #eee;
	transform: translateY(25%) rotate(45deg);

	height: 8px;
	width: 8px;
}

.popover {
	margin-bottom: 10px;
	background-color: #eee;
	display: inline-block;
	padding: 0 0.5rem 0.3rem;
	margin-top: 10px;
	border-radius: 3px;
}

.dark-theme .markdown pre {
	background-color: #d8d8d8;
	border-color: #ddd;
	filter: invert(98%) hue-rotate(180deg);
}

@media (prefers-reduced-motion: reduce) {
	data-lsp {
		transition: none;
	}
}

.logger {
	display: flex;
	align-items: center;
	color: black;
	padding: 6px;
	margin: 3px 0;
	width: 100%;
	white-space: pre-wrap;
	transform: translateX(-8px);
}

.logger svg {
	margin-right: 9px;
}

.logger.error-log {
	background-color: #fee;
	border-left: 2px solid #bf1818;
}

.logger.warn-log {
	background-color: #ffe;
	border-left: 2px solid #eae662;
}

.logger.log-log {
	color: #e9e9e9;
	background-color: #181818;
	border-left: 2px solid #ababab;
}

.logger.log-log svg {
	margin-left: 6px;
	margin-right: 9px;
}

#docs::-webkit-scrollbar {
	width: 11px;
}

#docs {
	height: 100vh;
	overflow-y: scroll;
	background: #181818;
	width: 40vw;

	scroll-snap-type: y proximity;
	
	padding: 1em;
	font-size: 16px;
}

#docs::-webkit-scrollbar-thumb {
  background-color: #fff;
  border-radius: 6px;
  border: 3px solid #101010;
}

#docs::-webkit-scrollbar-corner {
	display: none;
}

#docs p {
	height: 100vh;
	padding-top: 1em;
	margin-top: 0;
}

main {
	padding: 0 !important;
	margin-top: 3rem;
}

.bx--grid {
	padding: 0 !important;
}
